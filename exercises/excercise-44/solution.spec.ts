/* PLAYWRIGHT */
import { expect, test } from "@playwright/test";

// Testcase: Trang tr√≠ c√¢y th√¥ng Noel
test("Decorate the Christmas tree", async ({ page }) => {
  // Step 1: Truy c·∫≠p v√†o trang web ch√≠nh
  await page.goto("https://material.playwrightvn.com/");

  // Step 2: X√°c minh n·ªôi dung "T√†i li·ªáu h·ªçc automation test" hi·ªÉn th·ªã
  await expect(page.getByText("T√†i li·ªáu h·ªçc automation test")).toBeVisible();

  // Step 3: Nh·∫•p v√†o li√™n k·∫øt d·∫´n ƒë·∫øn tr√≤ ch∆°i "Trang tr√≠ c√¢y th√¥ng Noel"
  await page
    .getByRole("link", { name: "Game 04: Trang tr√≠ c√¢y th√¥ng Noel" })
    .click();

  // Step 4: X√°c minh ti√™u ƒë·ªÅ "Trang Tr√≠ C√¢y Th√¥ng Noel" hi·ªÉn th·ªã
  await expect(page.getByText("Trang Tr√≠ C√¢y Th√¥ng Noel")).toBeVisible();

  // Step 5: L·∫•y danh s√°ch c√°c phong c√°ch trang tr√≠ t·ª´ giao di·ªán
  let listStyles = await page.locator("ul[style]>li").all();
  let arrStyles: object[] = [];

  for (const style of listStyles) {
    // Step 5.1: L·∫•y n·ªôi dung vƒÉn b·∫£n t·ª´ng phong c√°ch trong danh s√°ch
    let txtStyle = await style.textContent();

    // Step 5.2: Tr√≠ch xu·∫•t t√™n phong c√°ch v√† s·ªë l∆∞·ª£ng t·ª´ vƒÉn b·∫£n
    let textMatch = txtStyle?.match(/(\d+)\s+(.*)/);
    if (textMatch) {
      arrStyles.push({ styleName: textMatch[2], quantity: textMatch[1] });
    }
  }

  // Step 6: Th·ª±c hi·ªán nh·∫•p v√†o c√°c n√∫t t∆∞∆°ng ·ª©ng v·ªõi t·ª´ng phong c√°ch
  for (const element of arrStyles) {
    // Step 6.1: L·∫∑p qua danh s√°ch phong c√°ch v√† nh·∫•p v√†o n√∫t v·ªõi s·ªë l·∫ßn t∆∞∆°ng ·ª©ng
    await page
      .getByRole("button")
      .filter({ hasText: element["styleName"] })
      .click({ clickCount: +element["quantity"] });
  }

  // Step 7: X√°c minh th√¥ng b√°o ho√†n th√†nh xu·∫•t s·∫Øc hi·ªÉn th·ªã
  await expect(page.locator(`//div[@id='result-message']`)).toHaveText(
    "üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ ho√†n th√†nh xu·∫•t s·∫Øc!"
  );
});
